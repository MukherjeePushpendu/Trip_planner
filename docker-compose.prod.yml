version: '3.8'

services:
  frontend:
    image: your-dockerhub-username/trip-planner:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    volumes:
      - ./ssl:/etc/nginx/ssl
      - ./logs:/var/log/nginx
    networks:
      - trip-planner-network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=80"
    depends_on:
      - backend
      - prometheus

  backend:
    image: your-dockerhub-username/trip-planner-backend:latest
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - MONGODB_URI=${MONGODB_URI}
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
    volumes:
      - ./logs:/app/logs
    networks:
      - trip-planner-network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=5000"
    depends_on:
      - mongodb
      - redis
      - elasticsearch

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - trip-planner-network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=6379"

  mongodb:
    image: mongo:latest
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongodb-data:/data/db
    networks:
      - trip-planner-network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=27017"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - trip-planner-network
    ports:
      - "9200:9200"
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - trip-planner-network
    depends_on:
      - elasticsearch

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - trip-planner-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    networks:
      - trip-planner-network
    depends_on:
      - prometheus

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.11.1
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./logs:/var/log:ro
    networks:
      - trip-planner-network
    depends_on:
      - elasticsearch

volumes:
  redis-data:
  mongodb-data:
  elasticsearch-data:
  prometheus-data:
  grafana-data:

networks:
  trip-planner-network:
    driver: bridge
